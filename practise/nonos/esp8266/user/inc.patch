Binary files inc/.DS_Store and inc_ok/.DS_Store differ
diff -uNr inc/agenttime.h inc_ok/agenttime.h
--- inc/agenttime.h	2018-09-03 14:25:19.000000000 +0800
+++ inc_ok/agenttime.h	2018-09-02 16:30:38.000000000 +0800
@@ -12,8 +12,10 @@
 #ifndef AGENTTIME_H
 #define AGENTTIME_H
 
+
+#include "esp_types.h"
 #include <time.h>
-#include "azure_c_shared_utility/umock_c_prod.h"
+#include "umock_c_prod.h"
 
 #ifdef __cplusplus
 extern "C"
diff -uNr inc/buffer_.h inc_ok/buffer_.h
--- inc/buffer_.h	2018-09-03 14:25:19.000000000 +0800
+++ inc_ok/buffer_.h	2018-09-02 16:30:38.000000000 +0800
@@ -9,11 +9,11 @@
 extern "C"
 {
 #else
-#include <stddef.h>
-#include <stdbool.h>
+//#include <stddef.h>
+//#include <stdbool.h>
 #endif
-
-#include "azure_c_shared_utility/umock_c_prod.h"
+#include "esp_types.h"
+#include "umock_c_prod.h"
 
 typedef struct BUFFER_TAG* BUFFER_HANDLE;
 
diff -uNr inc/crt_abstractions.h inc_ok/crt_abstractions.h
--- inc/crt_abstractions.h	2018-09-03 14:25:19.000000000 +0800
+++ inc_ok/crt_abstractions.h	2018-09-02 16:30:38.000000000 +0800
@@ -4,7 +4,7 @@
 #ifndef CRT_ABSTRACTIONS_H
 #define CRT_ABSTRACTIONS_H
 
-#include "azure_c_shared_utility/umock_c_prod.h"
+#include "umock_c_prod.h"
 
 #ifdef __cplusplus
 #include <cstdio>
@@ -13,9 +13,9 @@
 #include <cmath>
 extern "C" {
 #else // __cplusplus
-#include <stdio.h>
-#include <string.h>
-#include <errno.h>
+//#include <stdio.h>
+//#include <string.h>
+//#include <errno.h>
 #endif // __cplusplus
 
 #ifdef _MSC_VER
@@ -60,12 +60,13 @@
 #if defined __STDC_VERSION__
 #if ((__STDC_VERSION__  == 199901L) || (__STDC_VERSION__ == 201000L) || (__STDC_VERSION__ == 201112L))
 /*C99 compiler or C11*/
-#define HAS_STDBOOL
-#include <stdbool.h>
+//#define HAS_STDBOOL
+//#include <stdbool.h>
 #endif //  ((__STDC_VERSION__  == 199901L) || (__STDC_VERSION__ == 201000L) || (__STDC_VERSION__ == 201112L))
 #endif // __STDC_VERSION__
 #endif //  _MSC_VER
 
+#if 0
 #ifndef HAS_STDBOOL
 #ifdef __cplusplus
 #define _Bool bool
@@ -76,7 +77,7 @@
 #define true 1
 #endif // __cplusplus
 #endif // HAS_STDBOOL
-
+#endif
 
 /* Codes_SRS_CRT_ABSTRACTIONS_99_001:[The module shall not redefine the secure functions implemented by Microsoft CRT.] */
 /* Codes_SRS_CRT_ABSTRACTIONS_99_040 : [The module shall still compile when building on a Microsoft platform.] */
@@ -137,7 +138,7 @@
 #define ISNAN std::isnan
 }
 #else // __cplusplus
-#error unknown (or C89) compiler, provide ISNAN with the same meaning as isnan in C99 standard  
+//#error unknown (or C89) compiler, provide ISNAN with the same meaning as isnan in C99 standard  
 #endif // __cplusplus
 
 #endif // __STDC_VERSION__
diff -uNr inc/doublylinkedlist.h inc_ok/doublylinkedlist.h
--- inc/doublylinkedlist.h	2018-09-03 14:25:19.000000000 +0800
+++ inc_ok/doublylinkedlist.h	2018-09-02 16:30:38.000000000 +0800
@@ -9,11 +9,12 @@
 extern "C"
 {
 #else
-#include <stddef.h>
+//#include <stddef.h>
 #endif
 
-#include <stdint.h>
-#include "azure_c_shared_utility/umock_c_prod.h"
+//#include <stdint.h>
+#include "esp_types.h"
+#include "umock_c_prod.h"
 
 typedef struct DLIST_ENTRY_TAG
 {
diff -uNr inc/esp_types.h inc_ok/esp_types.h
--- inc/esp_types.h	1970-01-01 08:00:00.000000000 +0800
+++ inc_ok/esp_types.h	2018-09-02 16:30:38.000000000 +0800
@@ -0,0 +1,31 @@
+#ifndef _ESP_TYPES_H_
+#define _ESP_TYPES_H_
+
+
+#include "os_type.h"
+#include "mem.h"
+#include "osapi.h"
+#include "user_interface.h"
+#include "lwip/err.h"
+#include "c_types.h"
+#include "stdarg.h"
+
+#define zalloc(sz)          os_zalloc(sz)
+#define malloc(sz)          os_malloc(sz)
+#define free(ptr)           os_free(ptr)
+#define realloc(ptr,sz)     os_realloc(ptr,sz)
+#define calloc(n,sz)        os_calloc(n,sz)
+#define os_delay_us         ets_delay_us
+
+#define memcpy    os_memcpy
+#define memset	os_memset
+
+#define printf	os_printf
+#define sprintf	os_sprintf
+#define vsprintf  ets_vsprintf
+#define vsnprintf ets_vsnprintf
+
+//#define LogError os_printf
+
+#endif /* _ESP_TYPES_H_ */
+
diff -uNr inc/iothub_client.h inc_ok/iothub_client.h
--- inc/iothub_client.h	2018-09-03 14:25:19.000000000 +0800
+++ inc_ok/iothub_client.h	2018-09-02 16:30:38.000000000 +0800
@@ -20,11 +20,12 @@
 #ifndef IOTHUB_CLIENT_H
 #define IOTHUB_CLIENT_H
 
-#include <stddef.h>
-#include <stdint.h>
-#include <time.h>
-#include "azure_c_shared_utility/macro_utils.h"
-#include "azure_c_shared_utility/umock_c_prod.h"
+#include "esp_types.h"
+//#include <stddef.h>
+//#include <stdint.h>
+//#include <time.h>
+#include "macro_utils.h"
+#include "umock_c_prod.h"
 
 #ifdef __cplusplus
 extern "C"
diff -uNr inc/iothub_client_persistence.h inc_ok/iothub_client_persistence.h
--- inc/iothub_client_persistence.h	2018-09-03 14:25:19.000000000 +0800
+++ inc_ok/iothub_client_persistence.h	2018-09-02 16:30:38.000000000 +0800
@@ -20,7 +20,8 @@
 #ifndef IOTHUB_CLIENT_PERSISTENCE_H
 #define IOTHUB_CLIENT_PERSISTENCE_H
 
-#include <azure_c_shared_utility/gballoc.h>
+#include "esp_types.h"
+#include "umock_c_prod.h"
 
 #ifdef __cplusplus
 extern "C"
diff -uNr inc/iothub_mqtt_client.h inc_ok/iothub_mqtt_client.h
--- inc/iothub_mqtt_client.h	2018-09-03 14:25:19.000000000 +0800
+++ inc_ok/iothub_mqtt_client.h	2018-09-02 16:30:38.000000000 +0800
@@ -20,12 +20,11 @@
 #ifndef IOTHUB_MQTT_CLIENT_H
 #define IOTHUB_MQTT_CLIENT_H
 
-#include <stdlib.h>
-#include <limits.h>
-#include <azure_c_shared_utility/strings_types.h>
-#include <azure_c_shared_utility/tickcounter.h>
-#include <azure_c_shared_utility/doublylinkedlist.h>
-#include "azure_umqtt_c/mqtt_client.h"
+#include "esp_types.h"
+#include <strings_types.h>
+#include <tickcounter.h>
+#include <doublylinkedlist.h>
+#include "mqtt_client.h"
 #include "iothub_client.h"
 #include "iothub_client_persistence.h"
 
@@ -135,10 +134,11 @@
 
 MOCKABLE_FUNCTION(, void, iothub_mqtt_destroy, IOTHUB_MQTT_CLIENT_HANDLE, iotHubClient);
 
-MOCKABLE_FUNCTION(, int, iothub_mqtt_doconnect, IOTHUB_MQTT_CLIENT_HANDLE, iotHubClient, size_t, timeout);
+MOCKABLE_FUNCTION(, int, iothub_mqtt_doconnect, IOTHUB_MQTT_CLIENT_HANDLE, iotHubClient, size_t, timeout, void*, user_data);
 
 MOCKABLE_FUNCTION(,void, set_client_cert, IOTHUB_MQTT_CLIENT_HANDLE, iotHubClient, const char*, client_cert, const char*, client_key);
 
+typedef void (*IOT_CONN_DONEXT_CB)(int);
 #ifdef __cplusplus
 }
 #endif
diff -uNr inc/map.h inc_ok/map.h
--- inc/map.h	2018-09-03 14:25:19.000000000 +0800
+++ inc_ok/map.h	2018-09-02 16:30:38.000000000 +0800
@@ -9,17 +9,18 @@
 #ifndef MAP_H
 #define MAP_H
 
-#include "azure_c_shared_utility/macro_utils.h"
-#include "azure_c_shared_utility/strings.h"
-#include "azure_c_shared_utility/crt_abstractions.h"
-#include "azure_c_shared_utility/umock_c_prod.h"
+#include "esp_types.h"
+#include "macro_utils.h"
+#include "strings.h"
+#include "crt_abstractions.h"
+#include "umock_c_prod.h"
 
 #ifdef __cplusplus
 #include <cstddef>
 extern "C"
 {
 #else
-#include <stddef.h>
+//#include <stddef.h>
 #endif
 
 #define MAP_RESULT_VALUES \
diff -uNr inc/mqtt_client.h inc_ok/mqtt_client.h
--- inc/mqtt_client.h	2018-09-03 14:25:19.000000000 +0800
+++ inc_ok/mqtt_client.h	2018-09-02 16:30:38.000000000 +0800
@@ -8,14 +8,15 @@
 #include <cstdint>
 extern "C" {
 #else
-#include <stdint.h>
+//#include <stdint.h>
 #endif // __cplusplus
 
-#include "azure_c_shared_utility/xio.h"
-#include "azure_c_shared_utility/macro_utils.h"
-#include "azure_umqtt_c/mqttconst.h"
-#include "azure_umqtt_c/mqtt_message.h"
-#include "azure_c_shared_utility/umock_c_prod.h"
+#include "esp_types.h"
+#include "xio.h"
+#include "macro_utils.h"
+#include "mqttconst.h"
+#include "mqtt_message.h"
+#include "umock_c_prod.h"
 
 typedef struct MQTT_CLIENT_TAG* MQTT_CLIENT_HANDLE;
 
diff -uNr inc/mqtt_codec.h inc_ok/mqtt_codec.h
--- inc/mqtt_codec.h	2018-09-03 14:25:19.000000000 +0800
+++ inc_ok/mqtt_codec.h	2018-09-02 16:30:38.000000000 +0800
@@ -9,16 +9,17 @@
 #include <cstddef>
 extern "C" {
 #else
-#include <stdint.h>
-#include <stdbool.h>
-#include <stddef.h>
+//#include <stdint.h>
+//#include <stdbool.h>
+//#include <stddef.h>
 #endif // __cplusplus
 
-#include "azure_c_shared_utility/xio.h"
-#include "azure_c_shared_utility/buffer_.h"
-#include "azure_c_shared_utility/umock_c_prod.h"
-#include "azure_umqtt_c/mqttconst.h"
-#include "azure_c_shared_utility/strings.h"
+#include "esp_types.h"
+#include "xio.h"
+#include "buffer_.h"
+#include "umock_c_prod.h"
+#include "mqttconst.h"
+#include "strings.h"
 
 typedef struct MQTTCODEC_INSTANCE_TAG* MQTTCODEC_HANDLE;
 
diff -uNr inc/mqtt_message.h inc_ok/mqtt_message.h
--- inc/mqtt_message.h	2018-09-03 14:25:19.000000000 +0800
+++ inc_ok/mqtt_message.h	2018-09-02 16:30:38.000000000 +0800
@@ -9,13 +9,13 @@
 #include <cstddef>
 extern "C" {
 #else
-#include <stdint.h>
-#include <stdbool.h>
-#include <stddef.h>
+//#include <stdint.h>
+//#include <stdbool.h>
+//#include <stddef.h>
 #endif // __cplusplus
 
-#include "azure_umqtt_c/mqttconst.h"
-#include "azure_c_shared_utility/umock_c_prod.h"
+#include "mqttconst.h"
+#include "umock_c_prod.h"
 
 typedef struct MQTT_MESSAGE_TAG* MQTT_MESSAGE_HANDLE;
 
diff -uNr inc/mqttconst.h inc_ok/mqttconst.h
--- inc/mqttconst.h	2018-09-03 14:25:19.000000000 +0800
+++ inc_ok/mqttconst.h	2018-09-02 16:30:38.000000000 +0800
@@ -9,11 +9,11 @@
 #include <cstdint>
 extern "C" {
 #else
-#include <stddef.h>
-#include <stdint.h>
+//#include <stddef.h>
+//#include <stdint.h>
 #endif /* __cplusplus */
 
-#include "azure_c_shared_utility/crt_abstractions.h"
+#include "crt_abstractions.h"
 
 #define CONTROL_PACKET_TYPE_VALUES \
     CONNECT_TYPE = 0x10, \
diff -uNr inc/optionhandler.h inc_ok/optionhandler.h
--- inc/optionhandler.h	2018-09-03 14:25:19.000000000 +0800
+++ inc_ok/optionhandler.h	2018-09-02 16:30:38.000000000 +0800
@@ -4,7 +4,8 @@
 #ifndef OPTIONHANDLER_H
 #define OPTIONHANDLER_H
 
-#include "azure_c_shared_utility/macro_utils.h"
+#include "esp_types.h"
+#include "macro_utils.h"
 
 #define OPTIONHANDLER_RESULT_VALUES \
 OPTIONHANDLER_OK, \
@@ -17,7 +18,7 @@
 extern "C" {
 #endif /* __cplusplus */
 
-#include "azure_c_shared_utility/umock_c_prod.h"
+#include "umock_c_prod.h"
 
 typedef struct OPTIONHANDLER_HANDLE_DATA_TAG* OPTIONHANDLER_HANDLE;
 
diff -uNr inc/platform.h inc_ok/platform.h
--- inc/platform.h	2018-09-03 14:25:19.000000000 +0800
+++ inc_ok/platform.h	2018-09-02 16:30:38.000000000 +0800
@@ -4,15 +4,18 @@
 #ifndef PLATFORM_H
 #define PLATFORM_H
 
-#include "azure_c_shared_utility/strings.h"
-#include "azure_c_shared_utility/xio.h"
-#include "azure_c_shared_utility/umock_c_prod.h"
+#include "esp_types.h"
+#include "strings.h"
+#include "xio.h"
+#include "umock_c_prod.h"
 
 #ifdef __cplusplus
 extern "C" {
 #endif /* __cplusplus */
 
-    MOCKABLE_FUNCTION(, int, platform_init);
+typedef void(*SNTP_OK_CB)();
+
+    MOCKABLE_FUNCTION(, int, platform_init, SNTP_OK_CB, cb);
     MOCKABLE_FUNCTION(, void, platform_deinit);
     MOCKABLE_FUNCTION(, const IO_INTERFACE_DESCRIPTION*, platform_get_default_tlsio);
     MOCKABLE_FUNCTION(, STRING_HANDLE, platform_get_platform_info);
diff -uNr inc/shared_util_options.h inc_ok/shared_util_options.h
--- inc/shared_util_options.h	2018-09-03 14:25:19.000000000 +0800
+++ inc_ok/shared_util_options.h	2018-09-02 16:30:38.000000000 +0800
@@ -4,7 +4,8 @@
 #ifndef SHARED_UTIL_OPTIONS_H
 #define SHARED_UTIL_OPTIONS_H
 
-#include "azure_c_shared_utility/const_defines.h"
+#include "esp_types.h"
+#include "const_defines.h"
 
 #ifdef __cplusplus
 extern "C"
diff -uNr inc/singlylinkedlist.h inc_ok/singlylinkedlist.h
--- inc/singlylinkedlist.h	2018-09-03 14:25:19.000000000 +0800
+++ inc_ok/singlylinkedlist.h	2018-09-02 16:30:38.000000000 +0800
@@ -7,10 +7,11 @@
 #ifdef __cplusplus
 extern "C" {
 #else
-#include "stdbool.h"
+//#include "stdbool.h"
 #endif /* __cplusplus */
 
-#include "azure_c_shared_utility/umock_c_prod.h"
+#include "esp_types.h"
+#include "umock_c_prod.h"
 
 typedef struct SINGLYLINKEDLIST_INSTANCE_TAG* SINGLYLINKEDLIST_HANDLE;
 typedef struct LIST_ITEM_INSTANCE_TAG* LIST_ITEM_HANDLE;
diff -uNr inc/socketio.h inc_ok/socketio.h
--- inc/socketio.h	2018-09-03 14:25:19.000000000 +0800
+++ inc_ok/socketio.h	2018-09-02 16:30:38.000000000 +0800
@@ -4,9 +4,9 @@
 #ifndef SOCKETIO_H
 #define SOCKETIO_H
 
-#include "azure_c_shared_utility/xio.h"
-#include "azure_c_shared_utility/xlogging.h"
-#include "azure_c_shared_utility/umock_c_prod.h"
+#include "xio.h"
+#include "xlogging.h"
+#include "umock_c_prod.h"
 
 #ifdef __cplusplus
 extern "C" {
diff -uNr inc/strings.h inc_ok/strings.h
--- inc/strings.h	2018-09-03 14:25:19.000000000 +0800
+++ inc_ok/strings.h	2018-09-02 16:30:38.000000000 +0800
@@ -4,15 +4,16 @@
 #ifndef STRINGS_H
 #define STRINGS_H
 
-#include "azure_c_shared_utility/umock_c_prod.h"
-#include "azure_c_shared_utility/strings_types.h"
+#include "esp_types.h"
+#include "umock_c_prod.h"
+#include "strings_types.h"
 
 #ifdef __cplusplus
 #include <cstddef>
 extern "C"
 {
 #else
-#include <stddef.h>
+//#include <stddef.h>
 #endif
 
 MOCKABLE_FUNCTION(, STRING_HANDLE, STRING_new);
diff -uNr inc/threadapi.h inc_ok/threadapi.h
--- inc/threadapi.h	2018-09-03 14:25:19.000000000 +0800
+++ inc_ok/threadapi.h	2018-09-02 16:30:38.000000000 +0800
@@ -9,8 +9,9 @@
 #ifndef THREADAPI_H
 #define THREADAPI_H
 
-#include "azure_c_shared_utility/macro_utils.h"
-#include "azure_c_shared_utility/umock_c_prod.h"
+#include "esp_types.h"
+#include "macro_utils.h"
+#include "umock_c_prod.h"
 
 #ifdef __cplusplus
 extern "C" {
diff -uNr inc/tickcounter.h inc_ok/tickcounter.h
--- inc/tickcounter.h	2018-09-03 14:25:19.000000000 +0800
+++ inc_ok/tickcounter.h	2018-09-02 16:30:38.000000000 +0800
@@ -8,15 +8,16 @@
 extern "C" {
 #endif /* __cplusplus */
 
-#include <stdint.h>
+//#include <stdint.h>
+#include "esp_types.h"
 
-#include "azure_c_shared_utility/umock_c_prod.h"
+#include "umock_c_prod.h"
 
-#if _WIN32
-    typedef uint_fast64_t tickcounter_ms_t; // Use 64-bit because of QueryPerformanceCounter call
-#else
+//#if _WIN32
+///    typedef uint_fast64_t tickcounter_ms_t; // Use 64-bit because of QueryPerformanceCounter call
+//#else
     typedef uint_fast32_t tickcounter_ms_t;
-#endif
+//#endif
 
     typedef struct TICK_COUNTER_INSTANCE_TAG* TICK_COUNTER_HANDLE;
 
diff -uNr inc/tlsio_mbedtls.h inc_ok/tlsio_mbedtls.h
--- inc/tlsio_mbedtls.h	2018-09-03 14:25:19.000000000 +0800
+++ inc_ok/tlsio_mbedtls.h	2018-09-02 16:30:38.000000000 +0800
@@ -5,20 +5,21 @@
 #define TLSIO_MBEDTLS_H
 
 // DEPRECATED: tls_config will be removed from the tree.
-#include "azure_c_shared_utility/tls_config.h"
+//#include "azure_c_shared_utility/tls_config.h"
 
 // DEPRECATED: the USE_MBED_TLS #define is deprecated.
 #ifdef USE_MBED_TLS
 
-#include "azure_c_shared_utility/xio.h"
-#include "azure_c_shared_utility/xlogging.h"
-#include "azure_c_shared_utility/optionhandler.h"
+#include "esp_types.h"
+#include "xio.h"
+#include "xlogging.h"
+#include "optionhandler.h"
 
 #ifdef __cplusplus
 extern "C" {
 #include <cstddef>
 #else
-#include <stddef.h>
+//#include <stddef.h>
 #endif /* __cplusplus */
 
 // DEPRECATED: the functions below do not neet to be exposed.
diff -uNr inc/tlsio_options.h inc_ok/tlsio_options.h
--- inc/tlsio_options.h	2018-09-03 14:25:19.000000000 +0800
+++ inc_ok/tlsio_options.h	2018-09-02 16:30:38.000000000 +0800
@@ -7,8 +7,9 @@
 #ifndef TLSIO_OPTIONS_H
 #define TLSIO_OPTIONS_H
 
-#include "azure_c_shared_utility/xio.h"
-#include "azure_c_shared_utility/umock_c_prod.h"
+#include "esp_types.h"
+#include "xio.h"
+#include "umock_c_prod.h"
 
 #ifdef __cplusplus
 extern "C" {
diff -uNr inc/umock_c_prod.h inc_ok/umock_c_prod.h
--- inc/umock_c_prod.h	1970-01-01 08:00:00.000000000 +0800
+++ inc_ok/umock_c_prod.h	2018-09-02 16:30:38.000000000 +0800
@@ -0,0 +1,33 @@
+// Copyright (c) Microsoft. All rights reserved.
+// Licensed under the MIT license. See LICENSE file in the project root for full license information.
+
+#undef MOCKABLE_FUNCTION
+
+/* This header is meant to be included by production code headers, so that the MOCKABLE_FUNCTION gets enabled. */
+/* 
+    If you are porting to a new platform and do not want to build the tests, but only the production code,
+    simply make sure that this file is in the include path (either by copying it to your inc folder or 
+    by adjusting the include paths).
+*/
+
+#ifdef ENABLE_MOCKS
+
+/* Codes_SRS_UMOCK_C_LIB_01_001: [MOCKABLE_FUNCTION shall be used to wrap function definition allowing the user to declare a function that can be mocked.]*/
+#define MOCKABLE_FUNCTION(modifiers, result, function, ...) \
+    MOCKABLE_FUNCTION_UMOCK_INTERNAL_WITH_MOCK(modifiers, result, function, __VA_ARGS__)
+
+#include "umock_c.h"
+
+#else
+
+#include "macro_utils.h"
+
+#define UMOCK_C_PROD_ARG_IN_SIGNATURE(count, arg_type, arg_name) arg_type arg_name IFCOMMA(count)
+
+/* Codes_SRS_UMOCK_C_LIB_01_002: [The macro shall generate a function signature in case ENABLE_MOCKS is not defined.] */
+/* Codes_SRS_UMOCK_C_LIB_01_005: [**If ENABLE_MOCKS is not defined, MOCKABLE_FUNCTION shall only generate a declaration for the function.] */
+/* Codes_SRS_UMOCK_C_LIB_01_001: [MOCKABLE_FUNCTION shall be used to wrap function definition allowing the user to declare a function that can be mocked.]*/
+#define MOCKABLE_FUNCTION(modifiers, result, function, ...) \
+    result modifiers function(IF(COUNT_ARG(__VA_ARGS__),,void) FOR_EACH_2_COUNTED(UMOCK_C_PROD_ARG_IN_SIGNATURE, __VA_ARGS__));
+
+#endif
diff -uNr inc/utf8_checker.h inc_ok/utf8_checker.h
--- inc/utf8_checker.h	2018-09-03 14:25:19.000000000 +0800
+++ inc_ok/utf8_checker.h	2018-09-02 16:30:38.000000000 +0800
@@ -8,11 +8,12 @@
 #include <cstddef>
 extern "C" {
 #else
-#include <stdbool.h>
-#include <stddef.h>
+//#include <stdbool.h>
+//#include <stddef.h>
 #endif
 
-#include "azure_c_shared_utility/umock_c_prod.h"
+#include "esp_types.h"
+#include "umock_c_prod.h"
 
 MOCKABLE_FUNCTION(, bool, utf8_checker_is_valid_utf8, const unsigned char*, utf8_str, size_t, length);
 
diff -uNr inc/vector.h inc_ok/vector.h
--- inc/vector.h	2018-09-03 14:25:19.000000000 +0800
+++ inc_ok/vector.h	2018-09-02 16:30:38.000000000 +0800
@@ -4,9 +4,9 @@
 #ifndef VECTOR_H
 #define VECTOR_H
 
-#include "azure_c_shared_utility/crt_abstractions.h"
-#include "azure_c_shared_utility/umock_c_prod.h"
-#include "azure_c_shared_utility/vector_types.h"
+#include "crt_abstractions.h"
+#include "umock_c_prod.h"
+#include "vector_types.h"
 
 #ifdef __cplusplus
 #include <cstddef>
diff -uNr inc/vector_types.h inc_ok/vector_types.h
--- inc/vector_types.h	2018-09-03 14:25:19.000000000 +0800
+++ inc_ok/vector_types.h	2018-09-02 16:30:38.000000000 +0800
@@ -8,9 +8,11 @@
 extern "C"
 {
 #else
-#include <stdbool.h>
+//#include <stdbool.h>
 #endif
 
+#include "esp_types.h"
+
 typedef struct VECTOR_TAG* VECTOR_HANDLE;
 
 typedef bool(*PREDICATE_FUNCTION)(const void* element, const void* value);
diff -uNr inc/xio.h inc_ok/xio.h
--- inc/xio.h	2018-09-03 14:25:19.000000000 +0800
+++ inc_ok/xio.h	2018-09-02 16:30:38.000000000 +0800
@@ -4,16 +4,17 @@
 #ifndef XIO_H
 #define XIO_H
 
-#include "azure_c_shared_utility/optionhandler.h"
+#include "esp_types.h"
+#include "optionhandler.h"
 
-#include "azure_c_shared_utility/umock_c_prod.h"
-#include "azure_c_shared_utility/macro_utils.h"
+#include "umock_c_prod.h"
+#include "macro_utils.h"
 
 #ifdef __cplusplus
 #include <cstddef>
 extern "C" {
 #else
-#include <stddef.h>
+//#include <stddef.h>
 #endif /* __cplusplus */
 
 typedef struct XIO_INSTANCE_TAG* XIO_HANDLE;
diff -uNr inc/xlogging.h inc_ok/xlogging.h
--- inc/xlogging.h	2018-09-03 14:25:19.000000000 +0800
+++ inc_ok/xlogging.h	2018-09-02 16:30:38.000000000 +0800
@@ -4,8 +4,8 @@
 #ifndef XLOGGING_H
 #define XLOGGING_H
 
-#include "azure_c_shared_utility/agenttime.h"
-#include "azure_c_shared_utility/optimize_size.h"
+#include "esp_types.h"
+#include "agenttime.h"
 
 #if defined(ESP8266_RTOS)
 #include "c_types.h"
@@ -19,7 +19,7 @@
 #include <cstdio>
 extern "C" {
 #else
-#include <stdio.h>
+//#include <stdio.h>
 #endif /* __cplusplus */
 
 #ifdef TIZENRT
@@ -48,12 +48,14 @@
 #define LOG_NONE 0x00
 #define LOG_LINE 0x01
 
+#define NO_LOGGING
+
 /*no logging is useful when time and fprintf are mocked*/
 #ifdef NO_LOGGING
 #define LOG(...)
 #define LogInfo(...)
 #define LogBinary(...)
-#define LogError(...)
+//#define LogError(...)
 #define xlogging_get_log_function() NULL
 #define xlogging_set_log_function(...)
 #define LogErrorWinHTTPWithGetLastErrorAsString(...)
